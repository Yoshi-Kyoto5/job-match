version: 2
jobs:
  build:
    # machine:
    docker:
      - image: circleci/ruby:2.5.1-node
        environment:
          BUNDLER_VERSION: 2.1.4
          RAILS_ENV: 'test'
          DB_HOST: 127.0.0.1
    #    image: circleci/ruby:2.5.1
    #    image: circleci/ruby:2.5.1-strech
    #    image: circleci/ruby:2.3.1-jessie-node
        # environment:
        #   - BUNDLER_VERSION: 2.1.4
        #   - RAILS_ENV: 'test'
      # - image: circleci/mysql2:5.6
      - image: circleci/mysql:5.6
        environment:
          MYSQL_DATABASE: job-match_test
          # MYSQL_DATABASE: <%= ENV['DATABASE_NAME'] %>
          # MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          # MYSQL_ROOT_HOST: '%'
          MYSQL_USER: root

    working_directory: ~/job-match
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --path=vendor/bundle
          # bundle install --jobs=4 --retry=3 --path vendor/bundle
          # bundle config set path 'vender/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: mv config/database.ci.yml config/database.yml 
      # - run:
      #    name: 'wait for db'
      #    command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - add_ssh_keys:
          fingerprints:
            - "24:07:ab:c0:26:dc:aa:07:ad:f6:37:08:4d:73:62:6a"

      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy